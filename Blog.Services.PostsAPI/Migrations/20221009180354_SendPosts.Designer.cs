// <auto-generated />
using System;
using Blog.Services.PostsAPI.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Blog.Services.PostsAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221009180354_SendPosts")]
    partial class SendPosts
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0-rc.1.22426.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Blog.Services.PostsAPI.Models.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PostId"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PostId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            PostId = 1,
                            CreatedDate = new DateTime(2022, 10, 9, 21, 3, 54, 477, DateTimeKind.Local).AddTicks(255),
                            Name = "Тестовый пост 1",
                            Text = "..."
                        },
                        new
                        {
                            PostId = 2,
                            CreatedDate = new DateTime(2022, 10, 9, 21, 3, 54, 477, DateTimeKind.Local).AddTicks(295),
                            Name = "Тестовый пост 2",
                            Text = "..."
                        },
                        new
                        {
                            PostId = 3,
                            CreatedDate = new DateTime(2022, 10, 9, 21, 3, 54, 477, DateTimeKind.Local).AddTicks(305),
                            Name = "Тестовый пост 3",
                            Text = "..."
                        },
                        new
                        {
                            PostId = 4,
                            CreatedDate = new DateTime(2022, 10, 9, 21, 3, 54, 477, DateTimeKind.Local).AddTicks(314),
                            Name = "Тестовый пост 4",
                            Text = "..."
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
